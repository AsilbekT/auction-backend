openapi: 3.0.0
info:
  title: Property Management API
  version: "1.0.0"
  description: API for managing properties, owners, auctions, and related data.
  contact:
    email: support@example.com
servers:
  - url: http://ec2-98-82-33-217.compute-1.amazonaws.com:8000/api/
    description: Production server
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Property:
      type: object
      properties:
        id:
          type: integer
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zip_code:
          type: string
        county:
          type: string
        lot_size:
          type: integer
        year_built:
          type: integer
        zillow_link:
          type: string
        beds:
          type: integer
        baths:
          type: integer
        zestimate:
          type: number
          format: float
        square_footage:
          type: integer
    Owner:
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        dob:
          type: string
          format: date
        mailing_address:
          type: string
        mailing_city:
          type: string
        mailing_state:
          type: string
        mailing_zip:
          type: string
    Auction:
      type: object
      properties:
        id:
          type: integer
        auction_date:
          type: string
          format: date
        opening_bid:
          type: number
          format: float
        estimated_resale_value:
          type: number
          format: float
        estimated_debt:
          type: number
          format: float
    LegalProceeding:
      type: object
      properties:
        id:
          type: integer
        property:
          $ref: "#/components/schemas/Property"
        case_type:
          type: string
        total_amount_owed:
          type: number
          format: float
        equity:
          type: number
          format: float
        plaintiff:
          type: string
        defendants:
          type: string
        date_of_filing:
          type: string
          format: date
    Ownership:
      type: object
      properties:
        id:
          type: integer
        owner:
          $ref: "#/components/schemas/Owner"
        property:
          $ref: "#/components/schemas/Property"
        percentage_owned:
          type: number
          format: float
        date_acquired:
          type: string
          format: date
    MortgageAndDebt:
      type: object
      properties:
        id:
          type: integer
        property:
          $ref: "#/components/schemas/Property"
        mortgage_date:
          type: string
          format: date
        mortgage_amount:
          type: number
          format: float
        interest_rate:
          type: number
          format: float
        loan_type:
          type: string
        lender_name:
          type: string
    TaxLien:
      type: object
      properties:
        id:
          type: integer
        property:
          $ref: "#/components/schemas/Property"
        lien_type:
          type: string
        lien_date:
          type: string
          format: date
        lien_amount:
          type: number
          format: float
        certificate_of_release:
          type: object
    Connection:
      type: object
      properties:
        id:
          type: integer
        owner:
          $ref: "#/components/schemas/Owner"
        connection_type:
          type: string
        name:
          type: string
        address:
          type: string
        phone:
          type: string
paths:
  /token/:
    post:
      summary: Obtain JWT Token
      operationId: obtainToken
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Token successfully generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                  refresh:
                    type: string
        "401":
          description: Unauthorized
      security: []
  /token/refresh/:
    post:
      summary: Refresh JWT Token
      operationId: refreshToken
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh:
                  type: string
      responses:
        "200":
          description: Token successfully refreshed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
        "401":
          description: Unauthorized
      security: []
  /properties/:
    get:
      summary: List properties
      operationId: listProperties
      tags:
        - Properties
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Property"
        "401":
          description: Unauthorized
      security:
        - BearerAuth: []
    post:
      summary: Create property
      operationId: createProperty
      tags:
        - Properties
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Property"
      responses:
        "201":
          description: Property created successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
      security:
        - BearerAuth: []
  /properties/{id}/:
    get:
      summary: Retrieve property
      operationId: retrieveProperty
      tags:
        - Properties
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Property"
        "404":
          description: Property not found
        "401":
          description: Unauthorized
      security:
        - BearerAuth: []
    put:
      summary: Update property
      operationId: updateProperty
      tags:
        - Properties
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Property"
      responses:
        "200":
          description: Property updated successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "404":
          description: Property not found
      security:
        - BearerAuth: []
    delete:
      summary: Delete property
      operationId: deleteProperty
      tags:
        - Properties
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Property deleted successfully
        "401":
          description: Unauthorized
        "404":
          description: Property not found
      security:
        - BearerAuth: []
  /owners/:
    get:
      summary: List owners
      operationId: listOwners
      tags:
        - Owners
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Owner"
        "401":
          description: Unauthorized
      security:
        - BearerAuth: []
    post:
      summary: Create owner
      operationId: createOwner
      tags:
        - Owners
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Owner"
      responses:
        "201":
          description: Owner created successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
      security:
        - BearerAuth: []
  /owners/{id}/:
    get:
      summary: Retrieve owner
      operationId: retrieveOwner
      tags:
        - Owners
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Owner"
        "404":
          description: Owner not found
        "401":
          description: Unauthorized
      security:
        - BearerAuth: []
    put:
      summary: Update owner
      operationId: updateOwner
      tags:
        - Owners
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Owner"
      responses:
        "200":
          description: Owner updated successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "404":
          description: Owner not found
      security:
        - BearerAuth: []
    delete:
      summary: Delete owner
      operationId: deleteOwner
      tags:
        - Owners
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Owner deleted successfully
        "401":
          description: Unauthorized
        "404":
          description: Owner not found
      security:
        - BearerAuth: []
security:
  - BearerAuth: []
